{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16260\viewh20700\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 (1)\
- Right\
- Wrong\
- Right\
- Right\
\
(2)\
- Theta complexity means the function grows at the same rate. Therefore the two functions equal each other\
- Big O complexity means that the function grows no faster than the other function.  Therefore h(n) will grow faster f(n)\
\
(3)\
Taking the log of a number if always smaller than squaring it. This can be seen on a graph of n^2 and log(n). This means that n^2 will always grow faster than log n\
\
(4)\
- f(n) = O(g(n))\
- f(n) = 
\f1\fs32 \cf2 \expnd0\expndtw0\kerning0
\uc0\u937 (g(n)) 
\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
- f(n) = O(g(n)) \
- f(n) = O(g(n))\
- f(n) = O(g(n))\
- g(n) = O(f(n))\
}